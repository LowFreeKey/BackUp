type UserEntry = 
 record {
   myEssays: vec nat;
   pastRatedFeedbacks: vec nat;
   reviewingEssay: nat;
   token: nat;
   userName: text;
   userRating: nat;
 };
type EssayEntry = 
 record {
   reviewTimes: nat32;
   "text": text;
   title: text;
   tokenToPay: nat;
   topic: text;
   wordCount: nat32;
 };
service : {
  addRating: (nat, nat) -> () oneway;
  addReviewingEssay: (nat) -> (bool);
  createEssay: (EssayEntry) -> (bool);
  createProfile: (UserEntry) -> (bool);
  getAllEssays: () -> (vec record {
                             nat;
                             EssayEntry;
                           });
  getEssay: (nat) -> (opt EssayEntry);
  getReviewingEssay: () -> (opt EssayEntry);
  getReviewsFromEssay: (nat) -> (text);
  getUserEntrybyPrincipal: () -> (opt UserEntry);
  incomeByAvarage: (nat) -> (nat);
  logIn: () -> (bool);
  pay: (UserEntry, nat) -> (UserEntry);
  submittReviewedEssay: (text) -> () oneway;
  whoami: () -> (principal);
}
